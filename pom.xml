<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.epam</groupId>
    <artifactId>JMP_2018</artifactId>
    <version>1.0-SNAPSHOT</version>

<properties>
    <!--  This format is used by SonarQube. If you need another format see "buildnumber-maven-plugin" -->

    <maven.build.timestamp.format>MM.yyyy</maven.build.timestamp.format>

    <yearMonth>${maven.build.timestamp}</yearMonth>

    <!-- ************************-->

    <!-- Sonar/Reporting settings -->

    <!-- ************************-->

    <!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile

    because we want to be to able to execute mvn sonar:sonar without passing a profile -->

    <!-- Tells Sonar to use jacoco for coverage results -->

    <sonar.projectKey>MyProjectKey</sonar.projectKey>

    <sonar.projectName>My Project</sonar.projectName>

    <sonar.projectVersion>1.00</sonar.projectVersion>

    <sonar.language>java</sonar.language>

    <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>

    <!--<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>-->

    <!-- Jacoco version to use -->

    <!--<jacoco.version>0.7.2.201409121644</jacoco.version>-->

    <!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->

    <!--<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>-->

    <!-- Don't let Sonar execute tests. We will ask it to Maven 'sonar.dynamicAnalysis' is deprecated since version 4.3 and should no longer be used. -->

    <!-- <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis> -->

    <!-- The system property jacoco.outputDir needs to be override on the command line

        with an absolute path if you want to merge results from all modules.

        Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :

        mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target

        Note that unfortunately using the following does not work because of

        http://jira.codehaus.org/browse/SONAR-3427:

    <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>

    -->

    <!--<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>-->

    <!-- Jacoco output file for UTs -->

    <!--<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>-->

    <!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->

    <!--<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>-->

    <!-- Jacoco output file for ITs -->

    <!--<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>-->

    <!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->

    <!--<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>-->

    <!-- <sonar.junit.reportsPath>${project.build.directory}/surefire-reports/</sonar.junit.reportsPath> -->

    <!-- <sonar.tests>src/test/java</sonar.tests> -->

    <!-- === END of Sonar/Reporting settings === -->

</properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>
                                        com.epam.MainApp
                                    </mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.9.0</version>
                <executions>
                    <execution>
                       <goals>
                           <goal>
                               check
                           </goal>
                       </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.9.0</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <targetJdk>1.8</targetJdk>
                    <rulesets>
                        <ruleset>/rulesets/basic.xml</ruleset>
                    </rulesets>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>